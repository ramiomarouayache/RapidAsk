"use strict";(self.webpackChunkai_assistant=self.webpackChunkai_assistant||[]).push([[194],{9401:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"Tutorials/in-app-payment","title":"\ud83d\udcb3 In-app-payment","description":"How Stripe Subscription Works","source":"@site/docs/1.Tutorials/in-app-payment.md","sourceDirName":"1.Tutorials","slug":"/tutorials/in-app-payment","permalink":"/RapidAsk/docs/tutorials/in-app-payment","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/1.Tutorials/in-app-payment.md","tags":[],"version":"current","sidebarPosition":6.2,"frontMatter":{"slug":"/tutorials/in-app-payment","title":"\ud83d\udcb3 In-app-payment","sidebar_position":6.2},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udd79\ufe0f Custom actions","permalink":"/RapidAsk/docs/tutorials/custom-actions"},"next":{"title":"\ud83e\udd16 Visual characters","permalink":"/RapidAsk/docs/tutorials/visual-characters"}}');var i=n(4848),r=n(8453);const o={slug:"/tutorials/in-app-payment",title:"\ud83d\udcb3 In-app-payment",sidebar_position:6.2},c=void 0,l={},a=[{value:"<strong>How Stripe Subscription Works</strong>",id:"how-stripe-subscription-works",level:3},{value:"<strong>Set Up Your Stripe Subscription</strong>",id:"set-up-your-stripe-subscription",level:3},{value:"1. <strong>Create new Product in Stripe</strong>",id:"1-create-new-product-in-stripe",level:4},{value:"2. <strong>Connect Product ID in FlutterFlow actions</strong>",id:"2-connect-product-id-in-flutterflow-actions",level:4},{value:"3. <strong>Set Up the Checkout Session API Request</strong>",id:"3-set-up-the-checkout-session-api-request",level:4},{value:"4. <strong>Handle Webhooks in Firebase Cloud Functions</strong>",id:"4-handle-webhooks-in-firebase-cloud-functions",level:4},{value:"<strong>What Happens After the Payment?</strong>",id:"what-happens-after-the-payment",level:3},{value:"<strong>Testing Your Integration</strong>",id:"testing-your-integration",level:3}];function d(e){const s={code:"code",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h3,{id:"how-stripe-subscription-works",children:(0,i.jsx)(s.strong,{children:"How Stripe Subscription Works"})}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Customer Creation:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"When a checkout session is triggered, the API sends a request to create a new customer in Stripe, even if the user is already registered as a Stripe customer. This ensures that the same email address used for registration in your app is linked to their Stripe account."}),"\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.code,{children:"stripe_cust_id"})," field of the logged-in user in the Firestore ",(0,i.jsx)(s.code,{children:"users"})," collection is updated with the Stripe customer ID."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Stripe Checkout via FlutterFlow:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"A checkout session API request is made with the appropriate parameters based on the options selected by the end-user on the purchase page."}),"\n",(0,i.jsx)(s.li,{children:"The user is redirected to Stripe's hosted checkout page to complete the payment. This page handles the payment process securely."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Webhook Handling in Firebase Cloud Functions:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["After the payment is processed, Stripe sends a webhook to the Firebase Cloud Function, which we\u2019ve already deployed. This function listens for payment events and updates the user\u2019s subscription status in the Firestore ",(0,i.jsx)(s.code,{children:"users"})," collection."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"set-up-your-stripe-subscription",children:(0,i.jsx)(s.strong,{children:"Set Up Your Stripe Subscription"})}),"\n",(0,i.jsxs)(s.h4,{id:"1-create-new-product-in-stripe",children:["1. ",(0,i.jsx)(s.strong,{children:"Create new Product in Stripe"})]}),"\n",(0,i.jsx)(s.p,{children:"in your Stripe dashboard:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Go to ",(0,i.jsx)(s.strong,{children:"Products"})," in the sidebar and click ",(0,i.jsx)(s.strong,{children:"Add product"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Fill out the necessary details, such as the name of the product and description."}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Under ",(0,i.jsx)(s.strong,{children:"Pricing"}),", create the subscription pricing plans. For example, RapidAsk uses two pricing models:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"$8.99 per month"}),"\n",(0,i.jsx)(s.li,{children:"$19.99 per 3 months"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Click ",(0,i.jsx)(s.strong,{children:"Save"})," to create the product and get the product ID and price ID for your plans.(you will be able to add more pricings after saving)"]}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.img,{alt:"product",src:n(598).A+"",width:"1878",height:"857"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.h4,{id:"2-connect-product-id-in-flutterflow-actions",children:["2. ",(0,i.jsx)(s.strong,{children:"Connect Product ID in FlutterFlow actions"})]}),"\n",(0,i.jsx)(s.p,{children:"In FlutterFlow, you will connect the pricing plans to the subscription page. Here\u2019s how:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["Navigate to the ",(0,i.jsx)(s.strong,{children:"SubscriptionPage"})," in FlutterFlow."]}),"\n",(0,i.jsxs)(s.li,{children:["For each subscription option (e.g., monthly, 3 months), go to the ",(0,i.jsx)(s.strong,{children:"onTap"})," action and set the appropriate ",(0,i.jsx)(s.strong,{children:"Price ID"})," (e.g., ",(0,i.jsx)(s.code,{children:"price_1QXk3w*******"}),"). You can find these IDs in your Stripe Dashboard under the product\u2019s pricing section."]}),"\n",(0,i.jsxs)(s.li,{children:["ensure it's the same ",(0,i.jsx)(s.strong,{children:"Price ID"})," to control UI elements, like toggling the ",(0,i.jsx)(s.strong,{children:"container_border"})," or showing a ",(0,i.jsx)(s.strong,{children:"checkmark_icon"})," to indicate the selected option."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Make sure each pricing option is properly linked to the corresponding price ID, as this determines which plan the user selects during checkout."}),"\n",(0,i.jsxs)(s.h4,{id:"3-set-up-the-checkout-session-api-request",children:["3. ",(0,i.jsx)(s.strong,{children:"Set Up the Checkout Session API Request"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["In your FlutterFlow app, set up the ",(0,i.jsx)(s.strong,{children:"Checkout Session API request"}),". This request will initiate the Stripe checkout session when a user selects a subscription option."]}),"\n",(0,i.jsxs)(s.li,{children:["The API request should pass the appropriate price ID, as well as other necessary parameters such as the user's email and the ",(0,i.jsx)(s.strong,{children:"success"})," and ",(0,i.jsx)(s.strong,{children:"cancel"})," URLs."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"Make sure to set up these URLs correctly:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Success URL"}),': This URL is where users are redirected after completing the payment successfully. You should create a "Thank You" or confirmation page in your app and use its URL here.']}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Cancel URL"}),": This URL is where users are sent if they cancel the payment. Make sure to create a cancellation page in your app and use its URL here."]}),"\n"]}),"\n",(0,i.jsxs)(s.h4,{id:"4-handle-webhooks-in-firebase-cloud-functions",children:["4. ",(0,i.jsx)(s.strong,{children:"Handle Webhooks in Firebase Cloud Functions"})]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"After the user makes a payment, Stripe will send a webhook to your Firebase Cloud Function to notify you of the payment status."}),"\n",(0,i.jsxs)(s.li,{children:["All the necessary functions to handle webhooks are already included in the ",(0,i.jsx)(s.strong,{children:"FCF section"})," of the FlutterFlow template you received. These functions will update the ",(0,i.jsx)(s.code,{children:"subscriptionStatus"})," field in Firestore based on the payment events (such as ",(0,i.jsx)(s.code,{children:"active"}),", ",(0,i.jsx)(s.code,{children:"canceled"}),", ",(0,i.jsx)(s.code,{children:"failed"}),", etc.)."]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"what-happens-after-the-payment",children:(0,i.jsx)(s.strong,{children:"What Happens After the Payment?"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Successful Payment"}),": After a successful payment, the Firebase Cloud Function listens for the ",(0,i.jsx)(s.code,{children:"checkout.session.completed"})," event and updates the ",(0,i.jsx)(s.code,{children:"subscriptionStatus"})," field in Firestore to reflect the new subscription status (e.g., ",(0,i.jsx)(s.code,{children:"active"}),")."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Failed Payment"}),": If a payment fails, the Cloud Function listens for the ",(0,i.jsx)(s.code,{children:"invoice.payment_failed"})," event and updates the ",(0,i.jsx)(s.code,{children:"subscriptionStatus"})," to ",(0,i.jsx)(s.code,{children:"failed"}),". You can handle failed payments however you prefer, such as alerting the user or suspending their subscription."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Subscription Cancellation"}),": If a user cancels their subscription, the relevant webhook event (",(0,i.jsx)(s.code,{children:"customer.subscription.deleted"}),") will be triggered, and the Cloud Function will update the ",(0,i.jsx)(s.code,{children:"subscriptionStatus"})," to ",(0,i.jsx)(s.code,{children:"canceled"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h3,{id:"testing-your-integration",children:(0,i.jsx)(s.strong,{children:"Testing Your Integration"})}),"\n",(0,i.jsx)(s.p,{children:"Before going live, it\u2019s crucial to test the Stripe integration:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Use Stripe's Test Mode"}),": In the Stripe Dashboard, make sure you\u2019re in ",(0,i.jsx)(s.strong,{children:"Test Mode"})," when testing your payments and webhooks."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Stripe Test Cards"}),": Use Stripe\u2019s test card numbers to simulate successful and failed payments. For example:"]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Successful payment"}),": ",(0,i.jsx)(s.code,{children:"4242 4242 4242 4242"})," (Visa)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Failed payment"}),": ",(0,i.jsx)(s.code,{children:"4000 0000 0000 9995"})," (Card declined)"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Webhook Testing"}),": Use the Stripe CLI or Dashboard to trigger webhook events (e.g., payment success, payment failure) and make sure the Firebase Cloud Function handles them correctly."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},598:(e,s,n)=>{n.d(s,{A:()=>t});const t=n.p+"assets/images/product-subscription-ca3a9810252b7dacd71b59d89691d5ea.png"},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>c});var t=n(6540);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);